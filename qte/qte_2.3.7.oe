DESCRIPTION = "Qt/Embedded version ${PV}"
SECTION = "libs"
PRIORITY = "optional"
LICENSE = "GPL/QPL"
DEPENDS = "base/zlib base/libpng base/jpeg uicmoc-native"
PROVIDES = "virtual/qte virtual/libqte2"
PR = "1"

SRC_URI = "ftp://ftp.trolltech.com/pub/qt/source/qt-embedded-${PV}.tar.gz \
	   file://${FILESDIR}/qpe.patch;patch=1 \
	   file://${FILESDIR}/tslib.patch;patch=1 \
	   file://${FILESDIR}/devfs.patch;patch=1 \
	   file://${FILESDIR}/no-moc.patch;patch=1 \
	   file://${FILESDIR}/update-qtfontdir "
S = "${WORKDIR}/qt-${PV}"

export QTDIR = "${S}"

def qte_arch(d):
	import oe, re
	arch = oe.data.getVar('TARGET_ARCH', d, 1)
	if re.match("^i.86$", arch):
		arch = "x86"
	elif arch == "x86_64":
		arch = "x86"
	elif arch == "mipsel":
		arch = "mips"
	return arch

QTE_ARCH := "${@qte_arch(d)}"

EXTRA_OECONF_CONFIG = "-qconfig qpe"
EXTRA_OECONF_ARCH = "-xplatform ${TARGET_OS}-${QTE_ARCH}-g++"
EXTRA_OECONF_ARCH_collie = "-xplatform ${TARGET_OS}-sharp-g++"
EXTRA_OECONF_ARCH_ramses = "-xplatform ${TARGET_OS}-ramses-g++"

EXTRA_OECONF = "-system-jpeg -system-libpng -system-zlib -no-qvfb -no-xft -no-vnc -gif ${EXTRA_OECONF_ARCH} ${EXTRA_OECONF_CONFIG}"

EXTRA_OEMAKE = "-e"

export SYSCONF_CC = "${CC}"
export SYSCONF_CXX = "${CXX}"
export SYSCONF_LINK = "${CCLD}"
export SYSCONF_SHLIB = "${CCLD}"
export SYSCONF_CFLAGS = "${CFLAGS}"
export SYSCONF_CXXFLAGS = "${CXXFLAGS} -pipe -DQWS -fno-exceptions -fno-rtti -DNO_DEBUG"
export SYSCONF_LFLAGS = "${LDFLAGS}"
export SYSCONF_MOC = "${STAGING_BINDIR}/moc"
export SYSCONF_UIC = "${STAGING_BINDIR}/uic"

do_configure() {
	for f in ${S}/configs/linux-*-g++-shared; do
		sed -e 's,-linux-,-linux-uclibc-,g' < $f \
			> `echo $f | sed -e 's,linux-,linux-uclibc-,'`
	done
	echo yes | ./configure ${EXTRA_OECONF} || die "Configuring qt failed. EXTRA_OECONF was ${EXTRA_OECONF}"
}

do_compile() {
	unset CC LD CCLD CXX RANLIB AR STRIP CFLAGS LDFLAGS CXXFLAGS CPPFLAGS
	oe_runmake
}

do_stage() {
	oe_libinstall -so -C lib libqte ${STAGING_LIBDIR}
	rm -f include/qxt.h
	cp -pfLR include/* ${STAGING_INCDIR}/
}

do_install() {
	install -d ${D}/${sbindir}/
	install -m 0755 ${WORKDIR}/update-qtfontdir ${D}/${sbindir}/
	install -d ${D}${palmtopdir}/lib/fonts/
	oe_libinstall -so -C lib libqte ${D}/${palmtopdir}/lib
	cp -a lib/fonts/* ${D}${palmtopdir}/lib/fonts/
}

pkg_postinst () {
#!/bin/sh
if [ -n $D ]; then exit 1; fi
set -e
. /etc/profile
update-qtfontdir
}

#
# FIXME: Don't use the above but make the following work:
#

#pkg_postinst_qte-font-fixed() {
#if [ -n $D ]; then exit 1; fi
#/usr/sbin/update-qtfontdir
#}

#pkg_postinst_qte-font-helvetica() {
#if [ -n $D ]; then exit 1; fi
#/usr/sbin/update-qtfontdir
#}

#pkg_postinst_qte-fonts-smoothtimes() {
#if [ -n $D ]; then exit 1; fi
#/usr/sbin/update-qtfontdir
#}

PACKAGES = "libqte2 qte-font-fixed qte-font-helvetica qte-font-smoothtimes qte-font-smallsmooth"

FILES_${PN} = ""
FILES_libqte2 = "${palmtopdir}/lib/libqte.so* /usr/sbin/update-qtfontdir"
FILES_qte-font-fixed = "${palmtopdir}/lib/fonts/fixed*"
FILES_qte-font-helvetica = "${palmtopdir}/lib/fonts/helvetica*"
FILES_qte-font-smoothtimes = "${palmtopdir}/lib/fonts/smoothtimes*"
FILES_qte-font-smallsmooth = "${palmtopdir}/lib/fonts/smallsmooth*"

