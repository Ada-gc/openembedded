DESCRIPTION = "libxine"
SECTION = "libs"
PRIORITY = "optional"
MAINTAINER = "Pawel Osiczko <p.osiczko@tetrapyloctomy.org>"
DEPENDS = "zlib libogg tremor libmad"

inherit autotools

S = "${WORKDIR}/xine-lib"

SRC_URI = "cvs://anonymous@cvs.xine.sf.net/cvsroot/xine;module=xine-lib;tag=xine-1-beta12-release \
	   file://full.patch;patch=1 \
	   file://libvorbis.patch;patch=0 \
	   file://demux_ogg.patch;patch=0 \
	   file://configure.ac.patch;patch=0 \
	   file://vo_scale.patch;patch=0 \
	   file://mpegvideo-static-inlining.patch;patch=1 \
	   file://fix-syntax-xine-vorbis-decoder.patch;patch=1 \
	   file://fftscope-static-inlining.patch;patch=1"

SOV = "1.0.6"

do_configure() {
	./autogen.sh --host ${TARGET_SYS} --build ${BUILD_SYS} \
	      --enable-shared --disable-static --prefix=${prefix} \
	      --with-zlib-path=${STAGING_DIR}/${HOST_SYS} --with-vorbis-prefix=${STAGING_DIR}/${HOST_SYS} \
	      --disable-oggtest --with-ogg-prefix=${STAGING_DIR}/${HOST_SYS} --without-x \
	--disable-iconv --disable-nls --without-arts --without-sdl \
	--disable-aalib
}

do_compile() {
	oe_runmake LIBTOOL=${STAGING_BINDIR}/arm-linux-libtool OGG_LIBS=$(STAGING_LIBDIR)/libogg.so
}

# ug - we don't do elegant/purdy today
do_install() {
	oe_runmake -e LIBTOOL=${STAGING_BINDIR}/arm-linux-libtool \
	  -C src install-data \
	  'prefix=${D}' 'exec_prefix=${D}' 'libdir=${D}/${libdir}' \
	  'includedir=${D}/${includedir}'
	oe_runmake -e LIBTOOL=${STAGING_BINDIR}/arm-linux-libtool \
	  -C include install-data \
	  'prefix=${D}' 'exec_prefix=${D}' 'libdir=${D}/${libdir}' \
	  'includedir=${D}/${includedir}'
	for plugin in `find ${S}/src -type f -name xineplug*.la`; do 
	  dir=`dirname $plugin`
	  libname=`basename $plugin|sed -e's,\.la,,'` 
	  oe_libinstall -so -C $dir $libname ${D}/${libdir}/xine/plugins/1.0.0
	done
	oe_libinstall -so -C src/xine-engine libxine ${D}/${libdir}
}

do_stage() {
	oe_runmake -e LIBTOOL=${STAGING_BINDIR}/arm-linux-libtool \
	  -C src install-data \
	  'prefix=${STAGING_DIR}' 'exec_prefix=${STAGING_DIR}' \
	  'libdir=${STAGING_LIBDIR}' \
	  'includedir=${STAGING_INCDIR}'
	oe_runmake -e LIBTOOL=${STAGING_BINDIR}/arm-linux-libtool \
	  -C include install-data \
	  'prefix=${STAGING_DIR}' 'exec_prefix=${STAGING_DIR}' \
	  'libdir=${STAGING_LIBDIR}' \
	  'includedir=${STAGING_INCDIR}'
	for plugin in `find ${S}/src -type f -name xineplug*.la`; do 
	  dir=`dirname $plugin`
	  libname=`basename $plugin|sed -e's,\.la,,'` 
	  oe_libinstall -so -C $dir $libname ${STAGING_LIBDIR}/xine/plugins/1.0.0
	done
	oe_libinstall -so -C src/xine-engine libxine ${STAGING_LIBDIR}
}
