Index: gsm/include/gsmd/gsmd.h
===================================================================
--- gsm.orig/include/gsmd/gsmd.h	2007-03-29 17:07:10.000000000 +0200
+++ gsm/include/gsmd/gsmd.h	2007-03-29 17:07:43.000000000 +0200
@@ -58,6 +58,7 @@
 
 struct gsmd {
 	unsigned int flags;
+	int interpreter_ready;
 	struct gsmd_fd gfd_uart;
 	struct gsmd_fd gfd_sock;
 	struct llparser llp;
Index: gsm/src/gsmd/atcmd.c
===================================================================
--- gsm.orig/src/gsmd/atcmd.c	2007-03-29 17:06:01.000000000 +0200
+++ gsm/src/gsmd/atcmd.c	2007-03-29 17:08:27.000000000 +0200
@@ -183,6 +183,7 @@
 	 * an empty string or that 'ready' string, we need to init the modem */
 	if (strlen(buf) == 0 ||
 	    !strcmp(buf, "AT-Command Interpreter ready")) {
+		g->interpreter_ready = 1;
 		gsmd_initsettings(g);
 		return 0;
 	}
@@ -372,7 +373,7 @@
 	}
 
 	/* write pending commands to UART */
-	if (what & GSMD_FD_WRITE) {
+	if ((what & GSMD_FD_WRITE) && g->interpreter_ready) {
 		struct gsmd_atcmd *pos, *pos2;
 		llist_for_each_entry_safe(pos, pos2, &g->pending_atcmds, list) {
 			len = strlen(pos->buf);
Index: gsm/src/gsmd/gsmd.c
===================================================================
--- gsm.orig/src/gsmd/gsmd.c	2007-03-29 17:06:04.000000000 +0200
+++ gsm/src/gsmd/gsmd.c	2007-03-29 17:08:59.000000000 +0200
@@ -291,7 +291,8 @@
 
 	gsmd_vendor_plugin_find(&g);
 
-	gsmd_initsettings(&g);
+	if (g.interpreter_ready)
+		gsmd_initsettings(&g);
 
 	gsmd_opname_init(&g);
 
