diff -urN linux-2.6.23.orig/drivers/leds/Kconfig linux-2.6.23/drivers/leds/Kconfig
--- linux-2.6.23.orig/drivers/leds/Kconfig	2007-10-09 22:31:38.000000000 +0200
+++ linux-2.6.23/drivers/leds/Kconfig	2007-12-03 11:08:06.000000000 +0100
@@ -101,6 +101,12 @@
 	  outputs. To be useful the particular board must have LEDs
 	  and they must be connected to the GPIO lines.
 
+config LEDS_MPC8313E_RDB
+	tristate "LED Support for MPC8313E-RDB LEDs"
+	depends on LEDS_CLASS && PPC_83xx
+	help
+	  This option enables support for the LEDs on MPC8313E-RDB board.
+
 comment "LED Triggers"
 
 config LEDS_TRIGGERS
diff -urN linux-2.6.23.orig/drivers/leds/leds-mpc8313e-rdb.c linux-2.6.23/drivers/leds/leds-mpc8313e-rdb.c
--- linux-2.6.23.orig/drivers/leds/leds-mpc8313e-rdb.c	1970-01-01 01:00:00.000000000 +0100
+++ linux-2.6.23/drivers/leds/leds-mpc8313e-rdb.c	2007-12-03 11:08:36.000000000 +0100
@@ -0,0 +1,127 @@
+/*
+ * drivers/leds/leds-mpc8313e-rdb.c
+ * Copyright (C) 2007 Leon Woestenberg <leon@sidebranch.com>
+ * Copyright (C) 2007 Jeremy Laine <jeremy.laine@bolloretelecom.eu>
+ *
+ * This file is subject to the terms and conditions of the GNU General Public
+ * License.  See the file COPYING in the main directory of this archive for
+ * more details.
+ *
+ * MPC8313E-RDB LEDs driver
+ *
+ */
+
+#include <linux/module.h>
+#include <linux/platform_device.h>
+#include <linux/ioport.h>
+#include <linux/leds.h>
+#include <linux/err.h>
+#include <asm/io.h>
+
+#define LEDS_BASE 0xfa000000
+#define LEDS_SIZE 0x2
+
+static struct platform_dev *leds_pdev = NULL;
+static struct resource *led_mem = NULL;
+static void *led_io = NULL;
+static u8 led_state = 0;
+
+static void mpc8313leds_green_set(struct led_classdev *led_cdev, enum led_brightness value)
+{
+	led_state = value ? led_state&~32 : led_state|32;
+	iowrite8(led_state, led_io);
+}
+
+static struct led_classdev mpc8313_green_led = {
+	.name                   = "mpc8313:green",
+	.brightness_set         = mpc8313leds_green_set,
+};
+
+static void mpc8313leds_yellow_set(struct led_classdev *led_cdev, enum led_brightness value)
+{
+	led_state = value ? led_state&~64 : led_state|64;
+	iowrite8(led_state, led_io);
+}
+
+static struct led_classdev mpc8313_yellow_led = {
+	.name                   = "mpc8313:yellow",
+	.brightness_set         = mpc8313leds_yellow_set,
+};
+
+static void mpc8313leds_red_set(struct led_classdev *led_cdev, enum led_brightness value)
+{
+	led_state = value ? led_state&~128 : led_state|128;
+	iowrite8(led_state, led_io);
+}
+
+static struct led_classdev mpc8313_red_led = {
+	.name                   = "mpc8313:red",
+	.brightness_set         = mpc8313leds_red_set,
+};
+
+static int mpc8313leds_probe(struct platform_device *pdev)
+{
+	int ret;
+        
+	ret = led_classdev_register(&pdev->dev, &mpc8313_green_led);
+	if (ret < 0)
+		return ret;
+
+	ret = led_classdev_register(&pdev->dev, &mpc8313_yellow_led);
+	if (ret < 0)
+		return ret;
+	
+	ret = led_classdev_register(&pdev->dev, &mpc8313_red_led);
+	if (ret < 0)
+		return ret;
+	
+	return ret;
+}
+
+static int mpc8313leds_remove(struct platform_device *pdev)
+{
+	led_classdev_unregister(&mpc8313_green_led);
+	led_classdev_unregister(&mpc8313_yellow_led);
+	led_classdev_unregister(&mpc8313_red_led);
+	return 0;
+}
+
+static struct platform_driver mpc8313leds_driver = {
+      .driver         = {
+		.name   = "mpc8313-leds",
+		.owner  = THIS_MODULE,
+	},
+	.probe          = mpc8313leds_probe,
+	.remove         = mpc8313leds_remove,
+};
+
+static int __init mpc8313leds_init(void)
+{
+	if (!(led_mem = request_mem_region(LEDS_BASE, LEDS_SIZE, "mpc8313-leds")))
+		return -ENOMEM;
+	if (!(led_io = ioremap(LEDS_BASE, LEDS_SIZE)))
+	{
+		release_mem_region(LEDS_BASE, LEDS_SIZE);
+		led_mem = NULL;
+		return -ENOMEM;
+	}
+	leds_pdev = platform_device_register_simple("mpc8313-leds", -1, NULL, 0);
+
+	return platform_driver_register(&mpc8313leds_driver);
+}
+
+static void __exit mpc8313leds_exit(void)
+{
+	if (led_mem) release_mem_region(LEDS_BASE, LEDS_SIZE);
+	led_mem = NULL;
+	platform_driver_unregister(&mpc8313leds_driver);
+
+	platform_device_unregister(leds_pdev);
+}
+
+module_init(mpc8313leds_init);
+module_exit(mpc8313leds_exit);
+
+MODULE_AUTHOR("Leon Woestenberg <leon@sidebranch.com>");
+MODULE_DESCRIPTION("MPC8313E-RDB LED driver");
+MODULE_LICENSE("GPL");
diff -urN linux-2.6.23.orig/drivers/leds/Makefile linux-2.6.23/drivers/leds/Makefile
--- linux-2.6.23.orig/drivers/leds/Makefile	2007-10-09 22:31:38.000000000 +0200
+++ linux-2.6.23/drivers/leds/Makefile	2007-12-03 11:08:06.000000000 +0100
@@ -17,6 +17,7 @@
 obj-$(CONFIG_LEDS_H1940)		+= leds-h1940.o
 obj-$(CONFIG_LEDS_COBALT)		+= leds-cobalt.o
 obj-$(CONFIG_LEDS_GPIO)			+= leds-gpio.o
+obj-$(CONFIG_LEDS_MPC8313E_RDB)		+= leds-mpc8313e-rdb.o
 
 # LED Triggers
 obj-$(CONFIG_LEDS_TRIGGER_TIMER)	+= ledtrig-timer.o
