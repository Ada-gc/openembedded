Some pxa-based boards (like e.g. tosa) have the VBUS-detection gpio pin
inverted. I.e. it's low when VBUS is connected and high when
disconnected. Allow specifiing whether gpio_vbus value is inverted.

Signed-off-by: Dmitry Baryshkov <dbaryshkov@gmail.com>

Index: linux-test/drivers/usb/gadget/pxa2xx_udc.c
===================================================================
--- linux-test.orig/drivers/usb/gadget/pxa2xx_udc.c	2007-12-06 12:41:25.784337009 +0300
+++ linux-test/drivers/usb/gadget/pxa2xx_udc.c	2007-12-06 13:39:33.504345084 +0300
@@ -125,8 +125,12 @@ static int is_vbus_present(void)
 {
 	struct pxa2xx_udc_mach_info		*mach = the_controller->mach;
 
-	if (mach->gpio_vbus)
-		return gpio_get_value(mach->gpio_vbus);
+	if (mach->gpio_vbus) {
+		int value = gpio_get_value(mach->gpio_vbus);
+		return mach->gpio_vbus_inverted ?
+			!value :
+			value;
+	}
 	if (mach->udc_is_connected)
 		return mach->udc_is_connected();
 	return 1;
@@ -1396,6 +1400,9 @@ static irqreturn_t udc_vbus_irq(int irq,
 	struct pxa2xx_udc	*dev = _dev;
 	int			vbus = gpio_get_value(dev->mach->gpio_vbus);
 
+	if (dev->mach->gpio_vbus_inverted)
+		vbus = !vbus;
+
 	pxa2xx_udc_vbus_session(&dev->gadget, vbus);
 	return IRQ_HANDLED;
 }
Index: linux-test/include/asm-arm/mach/udc_pxa2xx.h
===================================================================
--- linux-test.orig/include/asm-arm/mach/udc_pxa2xx.h	2007-12-06 12:38:49.872349393 +0300
+++ linux-test/include/asm-arm/mach/udc_pxa2xx.h	2007-12-06 12:41:03.594903549 +0300
@@ -22,5 +22,6 @@ struct pxa2xx_udc_mach_info {
 	 */
 	u16	gpio_vbus;			/* high == vbus present */
 	u16	gpio_pullup;			/* high == pullup activated */
+	unsigned char gpio_vbus_inverted:1;
 };
 

