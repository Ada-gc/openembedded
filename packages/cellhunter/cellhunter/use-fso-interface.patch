From: Jan Luebbe <jluebbe@debian.org>
Date: Thu, 5 Mar 2009 18:00:49 +0000 (+0100)
Subject: use FSO Monitor interface and change version to 0.4.3
X-Git-Url: http://git.sicherheitsschwankung.de/?p=jan%2Fcellhunter.git;a=commitdiff_plain;h=ef2e6da2ce720874032f84fd8037f9d3388ba512

use FSO Monitor interface and change version to 0.4.3
---

diff --git a/cellhunter.py b/cellhunter.py
index 3eedb6e..59171f3 100644
--- a/cellhunter.py
+++ b/cellhunter.py
@@ -78,6 +78,7 @@
 ### 0.4.0 Now sending mcc&mnc and new arfcn                             ###
 ### 0.4.1 Bugfix release, problem with getting mcc                      ###
 ### 0.4.2 Now sending serving cell marker                               ###
+### 0.4.3 Use the FSO Monitor interface instead of DebugCommand         ###
 ###                                                                     ###
 ###########################################################################
 
@@ -120,9 +121,6 @@ class CellHunterGUI:
 	# shut down the modem an get it back to normal state
 	def gui_destroy(self):
 		if self.DEBUG: print "gui_destroy"
-
-		if self.DEBUG: print "gui_destroy / sending AT+CREG=0\\r\\n"
-		self.ogsmd_iface.DebugCommand("AT+CREG=0\r\n")
 		
 		if self.DEBUG: print "gui_destroy / kill all old wgets"
 		subprocess.Popen(["/usr/bin/killall", "wget"])
@@ -216,25 +214,12 @@ class CellHunterGUI:
 	def check_cellid(self, button, label):
 		if self.DEBUG: print "check_cellid"
 
-		# check cellid
-		"""data = self.ogsmd_iface.DebugCommand("AT+CREG?\r\n")
-
-		tmpdata = data[0].split("\",\"")
-		tmpdata2 = tmpdata[0].split("\"")
-		tmpdata3 = tmpdata[1].split("\"")
-
-		self.cell_la = tmpdata2[1]
-		self.cell_id = tmpdata3[0]
-		
-		if self.DEBUG: print "check_cellid / " + data[0]"""
-		
-		
 		try:
-			data = self.ogsmd_iface.DebugCommand("AT%EM=2,1\r\n")
-			self.cell_la = (hex(int(data[0].split(",")[15])).split("x")[1]).upper()
-			self.cell_id = (hex(int(data[0].split(",")[5])).split("x")[1]).upper()
-			self.signal = str((int(data[0].split(",")[3])/2)+2)
-			self.cell_arfcn = str(data[0].split(",")[0]).split(" ")[1]
+			data = self.ogsmd_monitor_iface.GetServingCellInformation()
+			self.cell_la = data['lac']
+			self.cell_id = data['cid']
+			self.signal = str(data['rxlev']/2+2)
+			self.cell_arfcn = str(data['arfcn'])
 	
 			while len(self.cell_la) < 4:
 				self.cell_la = "0" + self.cell_la
@@ -242,75 +227,63 @@ class CellHunterGUI:
 				self.cell_id = "0" + self.cell_id
 	
 			if self.DEBUG: print "check_cellid / " + self.cell_la + " " + self.cell_id + " " + self.signal + " " + self.cell_arfcn
-		except:
-			print "Error while getting main cell"
+		except dbus.DBusException, e:
+			print "Error while getting main cell:", e
 			self.cell_la = "0000"
 			self.cell_id = "0000"
 			self.signal = "0"
 			self.cell_arfcn = "0"
 		
-		
 		try:
-			# check provider
-			data = self.ogsmd_iface.DebugCommand("AT+COPS?\r\n")
-			tmpdata = data[0].split("\"")
-			self.provider = tmpdata[1]
-			if self.DEBUG: print "check_cellid / " + data[0]
-		except:
-			print "Error while getting provider"
+			data = self.ogsmd_network_iface.GetStatus()
+			self.provider = data['provider']
+			self.mcc = str(data['code'])[:3]
+			self.mnc = str(data['code'])[3:]
+			if self.DEBUG: print "check_cellid / Provider: " + self.provider + " " + self.mcc + " " + self.mnc
+		except dbus.DBusException, e:
+			print "Error while getting provider:", e
 			self.provider = "99999"
-		
-		
-		try:
-			data = self.ogsmd_iface.DebugCommand("AT%EM=2,4\r\n")
-			self.mcc = str(int((data[0].split(","))[2]))
-			self.mnc = str(int((data[0].split(","))[3]))
-			if self.DEBUG: print "check_cellid / Provider: " + self.mcc + " " + self.mnc
-		except:
-			print "Error while getting mcc/mnc"
 			self.mcc = "999"
 			self.mnc = "999"
 		
-		# check signal strength
-		"""data = self.ogsmd_iface.DebugCommand("AT+CSQ\r\n")
-		
-		tmpdata = data[0].split(" ")
-		tmpdata2 = tmpdata[1].split(",")
-
-		self.signal = tmpdata2[0]
-
-		if self.DEBUG: print "check_cellid / " + data[0]"""
-
 		try:
 			#neighbour cells
-			data = self.ogsmd_iface.DebugCommand("AT%EM=2,3\r\n")
-			self.ncells_la = data[7].split(",")
-			self.ncells_id = data[6].split(",")
-			self.ncells_signal = data[4].split(",")
-			self.ncells_arfcn = data[1].split(",")
+			data = self.ogsmd_monitor_iface.GetNeighbourCellInformation()
+			# FIXME handle less then 6 neighbours correctly
+			self.ncells_la = []
+			self.ncells_id = []
+			self.ncells_signal = []
+			self.ncells_arfcn = []
 	
-			for i in range(0,6):
-				self.ncells_la[i] = (hex(int(self.ncells_la[i])).split("x")[1]).upper()
-				self.ncells_id[i] = (hex(int(self.ncells_id[i])).split("x")[1]).upper()
-				self.ncells_signal[i] = str((int(self.ncells_signal[i])/2)+2)
-				self.ncells_arfcn[i] = str(self.ncells_arfcn[i])
-				while len(self.ncells_la[i]) < 4:
-					self.ncells_la[i] = "0" + self.ncells_la[i]
-				while len(self.ncells_id[i]) < 4:
-					self.ncells_id[i] = "0" + self.ncells_id[i]
-				#while len(self.ncells_signal[i]) < 2:
-				#	self.ncells_signal[i] = "0" + self.ncells_signal[i]
+			for cell in data:
+				self.ncells_la.append(cell['lac'])
+				self.ncells_id.append(cell['cid'])
+				self.ncells_signal.append(str(cell['rxlev']/2+2))
+				self.ncells_arfcn.append(str(cell['arfcn'])) 
+				while len(self.ncells_la[-1]) < 4:
+					self.ncells_la[-1] = "0" + self.ncells_la[-1]
+				while len(self.ncells_id[-1]) < 4:
+					self.ncells_id[-1] = "0" + self.ncells_id[-1]
+				#while len(self.ncells_signal[-1]) < 2:
+				#	self.ncells_signal[-1] = "0" + self.ncells_signal[-1]
 				
-				if self.DEBUG: print "check_cellid / neighbours: " + self.ncells_la[i] + " " + self.ncells_id[i] + " " + self.ncells_signal[i] + " " + self.ncells_arfcn[i]
-		except:
-			print "Error while getting neighbour cells"
+				if self.DEBUG: print "check_cellid / neighbours: " + self.ncells_la[-1] + \
+					" " + self.ncells_id[-1] + " " + self.ncells_signal[-1] + \
+					" " + self.ncells_arfcn[-1]
+			while len(self.ncells_la) < 6:
+				self.ncells_la.append("0000")
+				self.ncells_id.append("0000")
+				self.ncells_signal.append("0")
+				self.ncells_arfcn.append("0") 
+		except dbus.DBusException, e:
+			print "Error while getting neighbour cells:", e
 			self.ncells_la = ["0000", "0000", "0000", "0000", "0000", "0000"]
 			self.ncells_id = ["0000", "0000", "0000", "0000", "0000", "0000"]
 			self.ncells_signal = ["0", "0", "0", "0", "0", "0"]
 			self.ncells_arfcn = ["0", "0", "0", "0", "0", "0"]
 
 		# first part of the info label
-		if self.lang == "de": self.labeltext1 = "Provider:\t\t" + self.provider + " (" + self.mcc + "/" + self.mnc + ")" + "\nZelle:\t\t" + self.cell_la + " / " + self.cell_id + " / " + self.signal + "\n" + "Nachbarn:\t" + self.ncells_la[0] + " / " + self.ncells_id[0] + " / " + self.ncells_signal[0] + "  \t" + self.ncells_la[1] + " / " + self.ncells_id[1] + " / " + self.ncells_signal[1] + "\n\t\t\t" + self.ncells_la[2] + " / " + self.ncells_id[2] + " / " + self.ncells_signal[2] + "  \t" + self.ncells_la[3] + " / " + self.ncells_id[3] + " / " + self.ncells_signal[3] + "\n\t\t\t" + self.ncells_la[4] + " / " + self.ncells_id[4] + " / " + self.ncells_signal[4] + "  \t" + self.ncells_la[5] + " / " + self.ncells_id[5] + " / " + self.ncells_signal[5]
+		if self.lang == "de": self.labeltext1 = "Provider:\t\t" + self.provider + " (" + self.mcc + "/" + self.mnc + ")" + "\nZelle:\t\t" + self.cell_la + " / " + self.cell_id + " / " + self.signal + "\n" + "Nachbarn:\t" + self.ncells_la[0] + " / " + self.ncells_id[0] + " / " + self.ncells_signal[0] + "  \t" + self.ncells_la[1] + " / " + self.ncells_id[1] + " / " + self.ncells_signal[1] + "\n\t\t\t" + self.ncells_la[2] + " / " + self.ncells_id[2] + " / " + self.ncells_signal[2] + "	\t" + self.ncells_la[3] + " / " + self.ncells_id[3] + " / " + self.ncells_signal[3] + "\n\t\t\t" + self.ncells_la[4] + " / " + self.ncells_id[4] + " / " + self.ncells_signal[4] + "  \t" + self.ncells_la[5] + " / " + self.ncells_id[5] + " / " + self.ncells_signal[5]
 		else: self.labeltext1 = "Provider:\t\t" + self.provider + " (" + self.mcc + "/" + self.mnc + ")" + "\nCell:\t\t\t" + self.cell_la + " / " + self.cell_id + " / " + self.signal + "\n" + "Neighbours:\t" + self.ncells_la[0] + " / " + self.ncells_id[0] + " / " + self.ncells_signal[0] + "  \t" + self.ncells_la[1] + " / " + self.ncells_id[1] + " / " + self.ncells_signal[1] + "\n\t\t\t" + self.ncells_la[2] + " / " + self.ncells_id[2] + " / " + self.ncells_signal[2] + "  \t" + self.ncells_la[3] + " / " + self.ncells_id[3] + " / " + self.ncells_signal[3] + "\n\t\t\t" + self.ncells_la[4] + " / " + self.ncells_id[4] + " / " + self.ncells_signal[4] + "  \t" + self.ncells_la[5] + " / " + self.ncells_id[5] + " / " + self.ncells_signal[5]
 
 
@@ -567,8 +540,8 @@ class CellHunterGUI:
 
 		# get dbus ogsmd object and set modem in verbose mode
 		ogsmd_obj = bus.get_object( "org.freesmartphone.ogsmd", "/org/freesmartphone/GSM/Device" )
-		self.ogsmd_iface = dbus.Interface( ogsmd_obj, "org.freesmartphone.GSM.Debug" )
-		self.ogsmd_iface.DebugCommand("AT+CREG=2\r\n")
+		self.ogsmd_monitor_iface = dbus.Interface( ogsmd_obj, "org.freesmartphone.GSM.Monitor" )
+		self.ogsmd_network_iface = dbus.Interface( ogsmd_obj, "org.freesmartphone.GSM.Network" )
 
 		# request gps device
 		usage_obj = bus.get_object('org.freesmartphone.ousaged', '/org/freesmartphone/Usage')
