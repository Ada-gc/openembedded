#!/bin/sh

usage="Usage: $0 [flash|hdd|flash-data|hdd-data|jffs2-flash|jffs2-hdd|jffs2-flash-data|jffs2-hdd-data]"

# Set or seach for target disk

if [ $# -gt 1 ] ; then
    echo $usage
    exit 1
fi

if [ $# -eq 1 ] ; then
    if [ "$1" = "flash-data" ] ; then
	targ=/share/flash/data
	copy=true
    elif [ "$1" = "hdd-data" ] ; then
	targ=/share/hdd/data
	copy=true
    elif [ "$1" = "flash" ] ; then
	targ=/share/flash/conf
	copy=true
    elif [ "$1" = "hdd" ] ; then
	targ=/share/hdd/conf
	copy=true
    elif [ "$1" = "jffs2-flash-data" ] ; then
	targ=/share/flash/data
	copy=
    elif [ "$1" = "jffs2-hdd-data" ] ; then
	targ=/share/hdd/data
	copy=
    elif [ "$1" = "jffs2-flash" ] ; then
	targ=/share/flash/conf
	copy=
    elif [ "$1" = "jffs2-hdd" ] ; then
	targ=/share/hdd/conf
	copy=
    else
	echo $usage
	exit 1
    fi
else
    echo $usage
    exit 1
fi

# Check it's a real mount point

if grep $targ /proc/mounts >/dev/null 2>&1 ; then
    echo "Target disk is $targ"
else
    echo "Error: $targ is not a mounted disk"
    exit 1
fi

# Start at the root directory

cd /

if [ -z "$copy" ] ; then

    # Ensure /opt is there.

    if [ ! -d $targ/opt ] ; then
	echo "Creating new /opt directory on target disk."
	mkdir -p $targ/opt
    else
	echo "Preserving existing /opt directory on target disk."
    fi
  
    if [ -d /opt -a ! -h /opt ] ; then
	echo "Copying existing /opt directory from root disk to target disk."
	tar cf - opt | ( cd $targ ; tar xf - )
	mv /opt /opt.old
    fi

    echo "Linking /opt directory from target disk to root disk."
    rm -f /opt ; ln -s $targ/opt /opt

    # Ensure /usr/lib/ipkg is there.

    if [ ! -d $targ/usr/lib/ipkg ] ; then
	echo "Creating new /usr/lib/ipkg directory on target disk."
	mkdir -p $targ/usr/lib/ipkg
    fi
  
    if [ ! -f $targ/usr/lib/ipkg/status -a -d /usr/lib/ipkg -a ! -h /usr/lib/ipkg ] ; then
	echo "Copying existing /usr/lib/ipkg directory from root disk to target disk."
	tar cf - usr/lib/ipkg | ( cd $targ ; tar xf - )
    else
	echo "Preserving existing ipkg database on target disk."
    fi

    if [ -d /usr/lib/ipkg -a ! -h /usr/lib/ipkg ] ; then
	echo "Saving /usr/lib/ipkg directory on root disk in /usr/lib/ipkg.old"
	rm -rf /usr/lib/ipkg.old
	mv /usr/lib/ipkg /usr/lib/ipkg.old
    fi

    echo "Linking /usr/lib/ipkg directory from target disk to root disk."
    rm -f /usr/lib/ipkg ; ln -s $targ/usr/lib/ipkg /usr/lib/ipkg

else

    # Copy the complete rootfs to the target.

    /usr/bin/find / -print0 -mount | /usr/bin/cpio -p -0 -d -m -u $targ
    rm -rf $targ/dev ; mv $targ/dev.state $targ/dev
    rm -rf $targ/var ; mv $targ/var.state $targ/var

    rm -f /.sda1root /.sda2root /.sdb1root /.sdb2root
    rm -f $targ/.sda1root $targ/.sda2root $targ/.sdb1root $targ/.sdb2root

    if [ "$targ" = "/share/hdd/data" ] ; then
	echo > /.sda1root
	echo > $targ/.sda1root
    elif [ "$targ" = "/share/hdd/conf" ] ; then
	echo > /.sda2root
	echo > $targ/.sda2root
    elif [ "$targ" = "/share/flash/data" ] ; then
	echo > /.sdb1root
	echo > $targ/.sdb1root
    elif [ "$targ" = "/share/flash/conf" ] ; then
	echo > /.sdb2root
	echo > $targ/.sdb2root
    fi

fi

exit 0
