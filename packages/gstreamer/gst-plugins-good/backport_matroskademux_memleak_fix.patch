diff -Naur org/gst/matroska/matroska-demux.c gst-plugins-good-0.10.14/gst/matroska/matroska-demux.c
--- org/gst/matroska/matroska-demux.c	2009-06-23 16:13:25.000000000 +0200
+++ gst-plugins-good-0.10.14/gst/matroska/matroska-demux.c	2009-06-23 16:12:20.000000000 +0200
@@ -856,6 +856,8 @@
 
   g_return_val_if_fail (GST_IS_BUFFER (buf), NULL);
 
+  GST_DEBUG ("decoding buffer %p", buf);
+
   data = GST_BUFFER_DATA (buf);
   size = GST_BUFFER_SIZE (buf);
 
@@ -873,6 +875,7 @@
 
     return buf;
   } else {
+    GST_DEBUG ("decode data failed");
     gst_buffer_unref (buf);
     return NULL;
   }
@@ -3911,6 +3914,10 @@
         guint64 num;
         guint8 *data;
 
+        if (buf) {
+          gst_buffer_unref (buf);
+          buf = NULL;
+        }
         if ((ret = gst_ebml_read_buffer (ebml, &id, &buf)) != GST_FLOW_OK)
           break;
 
@@ -4163,6 +4170,7 @@
 
       sub = gst_buffer_create_sub (buf,
           GST_BUFFER_SIZE (buf) - size, lace_size[n]);
+      GST_WARNING_OBJECT (demux, "created subbuffer %p", sub);
 
       if (stream->encodings != NULL && stream->encodings->len > 0)
         sub = gst_matroska_decode_buffer (stream, sub);
@@ -4192,7 +4200,6 @@
 
       gst_matroska_demux_sync_streams (demux);
 
-
       if (duration) {
         GST_BUFFER_DURATION (sub) = duration / laces;
         stream->pos += GST_BUFFER_DURATION (sub);
@@ -4216,6 +4223,7 @@
           && stream->set_discont) {
         /* When doing seeks or such, we need to restart on key frames or
          * decoders might choke. */
+	gst_buffer_unref(sub);
         goto done;
       }
 
@@ -4235,6 +4243,7 @@
 
       /* Postprocess the buffers depending on the codec used */
       if (stream->postprocess_frame) {
+        GST_LOG_OBJECT (demux, "running post process");
         ret = stream->postprocess_frame (GST_ELEMENT (demux), stream, &sub);
       }
 
@@ -4252,7 +4261,7 @@
   }
 
 done:
-  if (readblock)
+  if (buf)
     gst_buffer_unref (buf);
   g_free (lace_size);
 
