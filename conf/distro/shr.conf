#-----------------------------------------------------------------------------
#@TYPE: Distribution
#@NAME: SHR
#@DESCRIPTION: Linux Distribution Configuration for Mobile Phones
#-----------------------------------------------------------------------------

# set default locale for images - we have to do that before
# including angstrom-2007-for-openmoko.inc because otherwise
# it will be already set to en-gb
IMAGE_LINGUAS ?= "en-us"

# Set the toolchain type (internal, external) and brand (generic, csl etc.)
TOOLCHAIN_TYPE ?= "internal"
TOOLCHAIN_BRAND ?= ""

#
# Header
#
DISTRO_NAME = "shr"
DISTRO_VERSION = "-${DATE}"
DISTRO_REVISION = "2"
DISTRO_PR = ".3"
#DISTRO_TYPE = "release"
DISTRO_TYPE = "debug"
DISTRO = "shr"

# We need to override some machine stuff as well; include the machine-
# specific file here (if it exists).
include conf/distro/include/shr-${MACHINE}.conf

require conf/distro/include/preferred-shr-versions.inc
require conf/distro/include/shr-autorev.inc

include conf/distro/minimal.conf

include conf/distro/include/angstrom-eglibc.inc
# ARM920T and up can use thumb mode to decrease binary size at the expense of speed
# (the complete story is a bit more nuanced due to cache starvation)
# Angstrom turns on thumb for armv4t machine according to this RFC:
# http://lists.linuxtogo.org/pipermail/angstrom-distro-devel/2008-October/002714.html

# We can't do ARM_INSTRUCTION_SET_armv4t since that will un-overridable in recipes like gcc
ANGSTROM_ARM_INSTRUCTION_SET ?= "arm"


ARM_INSTRUCTION_SET = "${ANGSTROM_ARM_INSTRUCTION_SET}"
# "arm" "thumb"
#    The instruction set the compiler should use when generating application
#    code.  The kernel is always compiled with arm code at present.  arm code
#    is the original 32 bit ARM instruction set, thumb code is the 16 bit
#    encoded RISC sub-set.  Thumb code is smaller (maybe 70% of the ARM size)
#    but requires more instructions (140% for 70% smaller code) so may be
#    slower.

THUMB_INTERWORK = "yes"
# "yes" "no"
#    Whether to compile with code to allow interworking between the two
#    instruction sets.  This allows thumb code to be executed on a primarily
#    arm system and vice versa.  It is strongly recommended that DISTROs not
#    turn this off - the actual cost is very small.

# We don't want to keep OABI compat
ARM_KEEP_OABI = "0"
# Do keep OABI compat for om-gta01 to keep the gllin binary working
ARM_KEEP_OABI_pn-linux-openmoko-2.6.24_om-gta01 = "1"
ARM_KEEP_OABI_pn-linux-openmoko-2.6.28_om-gta01 = "1"


#Generate locales on the buildsystem instead of on the target. Speeds up first boot, set to "1" to enable
PREFERRED_PROVIDER_qemu-native = "qemu-native"
ENABLE_BINARY_LOCALE_GENERATION ?= "1"

# We only want to build UTF8 locales
LOCALE_UTF8_ONLY = "1"

#qemu doesn't like this fp
ENABLE_BINARY_LOCALE_GENERATION_ep9312 = "0"

#qemu has taken a dislike to armeb as well
ENABLE_BINARY_LOCALE_GENERATION_armeb = "0"

#ARM EABI is softfloat by default, but let's make sure :)
#make it overridable for platforms with FPU, like ep93xx or i.mx31
TARGET_FPU_arm ?= "soft"
TARGET_FPU_armeb ?= "soft"
TARGET_FPU_ixp4xx ?= "soft"
TARGET_FPU_ppc405 ?= "soft"

TARGET_FPU_armv6 ?= "hard"
TARGET_FPU_armv6-novfp ?= "soft"
TARGET_FPU_armv7a ?= "hard"
TARGET_FPU_ppc603e ?= "hard"

CVS_TARBALL_STASH += "http://build.shr-project.org/sources/"

PREMIRRORS = "(ftp|https?)$://.*/.* http://build.shr-project.org/sources/"

DISTRO_FEED_PREFIX ?= "shr-dev"
DISTRO_FEED_URI ?= "http://build.shr-project.org/shr-testing/ipk"

AB_DEPLOY_EXTRA ?= ""
DEPLOY_DIR_IMAGE = "${DEPLOY_DIR}/images/${MACHINE_ARCH}/${AB_DEPLOY_EXTRA}"

IMAGE_INITSCRIPTS = "initscripts-shr"
DISTRO_INITSCRIPTS = "initscripts-shr"
DISTRO_DEV_MANAGER = "udev"

IPKG_VARIANT = "opkg"

# Same kernel so same usb
PACKAGE_ARCH_pn-usb-gadget-mode_om-gta01 = "armv4t"
PACKAGE_ARCH_pn-usb-gadget-mode_om-gta02 = "armv4t"
# same kernel so same keymaps
PACKAGE_ARCH_pn-keymaps_om-gta01 = "armv4t"
PACKAGE_ARCH_pn-keymaps_om-gta02 = "armv4t"
# neod knows about both machines
PACKAGE_ARCH_pn-neod_om-gta01 = "armv4t"
PACKAGE_ARCH_pn-neod_om-gta02 = "armv4t"

PREFERRED_PROVIDER_gconf = "gconf"
PREFERRED_PROVIDER_virtual/shr-splash-theme = "shr-splash-theme-logo"
PREFERRED_PROVIDER_frameworkd-config = "frameworkd-config-shr"
PREFERRED_PROVIDER_gpsd = "fso-gpsd"
PREFERRED_PROVIDER_e-wm-menu = "e-wm-menu-shr"
PREFERRED_PROVIDER_openmoko-alsa-scenarios = "alsa-scenarii-shr"
PREFERRED_PROVIDER_virtual/alsa-scenarios = "alsa-scenarii-shr"
PREFERRED_PROVIDER_libfribidi = "fribidi"

# Helper to say what image we built
SHR_VERSION_FILE = "${IMAGE_ROOTFS}/${sysconfdir}/shr-version"
ROOTFS_POSTPROCESS_COMMAND += "OLD_PWD=$PWD; cd `dirname '${FILE_DIRNAME}'`; echo Tag Name: `git tag|tail -n 1`> ${SHR_VERSION_FILE};cd $OLD_PWD;"
ROOTFS_POSTPROCESS_COMMAND += "OLD_PWD=$PWD; cd `dirname '${FILE_DIRNAME}'`; echo VERSION: `git-log -n1 --pretty=oneline|awk '{print $1}'` >> ${SHR_VERSION_FILE}; cd $OLD_PWD;"
ROOTFS_POSTPROCESS_COMMAND += "OLD_PWD=$PWD; cd `dirname '${FILE_DIRNAME}'`; echo Branch: ` git branch |awk '/*/{print $2}'` >> ${SHR_VERSION_FILE}; cd $OLD_PWD;"
ROOTFS_POSTPROCESS_COMMAND += "echo Build Host: `cat /etc/hostname` >> ${SHR_VERSION_FILE};"
ROOTFS_POSTPROCESS_COMMAND += "echo Time Stamp: `date -R` >> ${SHR_VERSION_FILE};"

SRCPV = "${@bb.fetch.get_srcrev(d)}"

#Package customization
EXTRA_OECONF-pn_qemu += " --target-list=arm-linux-user,arm-softmmu"
