PV = "2.4.18-rmk7-pxa3-embedix"
LICENSE = "GPL"
KV = "2.4.18"
RMKV = "7"
PXAV = "3"
SHARPV = "20030509"
PR = "r2"
DESCRIPTION = "Linux kernel for OpenZaurus StrongArm processor based devices."

FILESDIR = "${@os.path.dirname(oe.data.getVar('FILE',d,1))}/openzaurus-sa-${KV}-rmk${RMKV}-pxa${PXAV}-embedix${SHARPV}"

SRC_URI = "http://aurach.ewu.edu/ield_software/ch5/ROM3.10_stuff/linux-sl5500-${SHARPV}-rom3_10.tar.bz2 \
           file://cacko.patch;patch=1 \
           file://battery.patch;patch=1 \
           file://bluetooth-patch-2.4.18-mh9.diff;patch=1 \
           file://iw_handlers.w13-5.diff;patch=1 \
           file://iw_handlers.w14-5.diff;patch=1 \
           file://iw240_we15-6.diff;patch=1 \
           file://idecs.patch;patch=1 \
           file://logo.patch;patch=1 \
           file://initsh.patch;patch=1 \
           file://keymap-more-sane.patch;patch=1 \
           file://mkdep.patch;patch=1 \
           file://disable-pcmcia-probe.patch;patch=1 \
           file://linux-2.4.18-list_move.patch;patch=1 \
           file://defconfig-${MACHINE}"

# apply this when we have a patch that allows building with gcc 3.x:
# SRC_URI_append = file://gcc-3.3.patch;patch=1
# SRC_URI_append = file://machtune-args.patch;patch=1

S = "${WORKDIR}/linux"

inherit kernel

#
# Compensate for sucky bootloader on all Sharp Zaurus models
#
FILES_kernel = ""
ALLOW_EMPTY = 1

KERNEL_CCSUFFIX = "-2.95"
KERNEL_LDSUFFIX = "-2.11.2"
COMPATIBLE_HOST = "arm.*-linux"
EXTRA_OEMAKE = ""

#
# FIXME: Use configuration system
#
export mem = ${@oe.data.getVar("COLLIE_MEMORY_SIZE",d,1) or "32"}
export rd  = ${@oe.data.getVar("COLLIE_RAMDISK_SIZE",d,1) or "32"}
export CMDLINE = "console=ttyS0 root=/dev/mtdblock4 rootfstype=jffs2 jffs2_orphand_inodes=delete"

do_configure_prepend() {
        install -m 0644 ${WORKDIR}/defconfig-${MACHINE} ${S}/.config || die "No default configuration for ${MACHINE} available."

        mempos=`echo "obase=16; $mem * 1024 * 1024" | bc`
        rdsize=`echo "$rd * 1024" | bc`
        total=`expr $mem + $rd`
        addr=`echo "obase=16; ibase=16; C000000 + $mempos" | bc`
        if [ "$rd" == "0" ]
        then
                echo "# CONFIG_MTD_MTDRAM_SA1100 is not set" >> ${S}/.config
        else
                echo "CONFIG_MTD_MTDRAM_SA1100=y"           >> ${S}/.config
                echo "CONFIG_MTDRAM_TOTAL_SIZE=$rdsize"     >> ${S}/.config
                echo "CONFIG_MTDRAM_ERASE_SIZE=1"           >> ${S}/.config
                echo "CONFIG_MTDRAM_ABS_POS=$addr"          >> ${S}/.config
        fi
	echo "CONFIG_CMDLINE=\"$CMDLINE mem=${mem}M\"" >> ${S}/.config
}
